/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package combobox;

import javax.swing.JOptionPane;

/**
 *
 * @author galog
 */
public class VentanaComboBox extends javax.swing.JFrame {

    /**
     * Creates new form VentanaComboBox
     */
    public VentanaComboBox() {
        initComponents();

        setTitle("Agregar elementos combobox");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TextoPrincipal = new javax.swing.JLabel();
        TextoIntroducirDatos = new javax.swing.JTextField();
        BotonIntroducirDatos = new javax.swing.JButton();
        ComboBoxDatos = new javax.swing.JComboBox<>();
        BotonIntroducirTodo = new javax.swing.JButton();
        BotonBorrarTodo = new javax.swing.JButton();
        BotonBorrarSeleccionado = new javax.swing.JButton();
        ComboBoxCurso = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        TextoPrincipal.setText("Añade el nombre de los módulos en los que estás matriculado");

        TextoIntroducirDatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextoIntroducirDatosActionPerformed(evt);
            }
        });

        BotonIntroducirDatos.setText("Añadir");
        BotonIntroducirDatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonIntroducirDatosActionPerformed(evt);
            }
        });

        BotonIntroducirTodo.setText("Añadir todo");
        BotonIntroducirTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonIntroducirTodoActionPerformed(evt);
            }
        });

        BotonBorrarTodo.setText("Borrar todo");
        BotonBorrarTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonBorrarTodoActionPerformed(evt);
            }
        });

        BotonBorrarSeleccionado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/combobox/trash.png"))); // NOI18N
        BotonBorrarSeleccionado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonBorrarSeleccionadoActionPerformed(evt);
            }
        });

        ComboBoxCurso.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Primero", "Segundo" }));
        ComboBoxCurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBoxCursoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BotonIntroducirTodo, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(BotonIntroducirDatos, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(BotonBorrarTodo, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(TextoIntroducirDatos, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(36, 36, 36)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(ComboBoxCurso, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(ComboBoxDatos, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(BotonBorrarSeleccionado)))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(TextoPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(22, 50, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(TextoPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ComboBoxCurso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TextoIntroducirDatos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComboBoxDatos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BotonBorrarSeleccionado))
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BotonIntroducirDatos)
                    .addComponent(BotonBorrarTodo))
                .addGap(18, 18, 18)
                .addComponent(BotonIntroducirTodo)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void TextoIntroducirDatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextoIntroducirDatosActionPerformed
        
    }//GEN-LAST:event_TextoIntroducirDatosActionPerformed

    private void BotonIntroducirDatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonIntroducirDatosActionPerformed
        //Comprobar que está vacio el campo para añadir el texto
        if (TextoIntroducirDatos.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Error, debes escribir algún elemento para poder añadirlo a la lista", getTitle(), JOptionPane.ERROR_MESSAGE);
            return;
        }
        //Comprobar que el elemento ya está en la lista
        for (int i = 0; i < ComboBoxDatos.getItemCount(); i++) {
            if (TextoIntroducirDatos.getText().equals(ComboBoxDatos.getItemAt(i))) {
                JOptionPane.showMessageDialog(rootPane, "Ya has añadido este elemento", getTitle(), JOptionPane.ERROR_MESSAGE);
                //Si esta seleccionado primero, se escribira en el texto 1º
                if (ComboBoxCurso.getSelectedItem().equals("Primero")){
                    TextoIntroducirDatos.setText("1º ");
                }
                //Si esta seleccionado segundo, se escribira en el texto 2º
                if (ComboBoxCurso.getSelectedItem().equals("Segundo")){
                    TextoIntroducirDatos.setText("2º ");
                }
                /*return para que no me escriba nada mas aparte de 1º o 2º en el texto
                * Si hago un break en vez de return, me añadira al combobox unicamente 1º o 2º.
                * Debe parar el metodo entero para que no me añada nada al combobox
                * Solo debe escribir en el texto 1º o 2º pero sin añadir nada al combobox
                */
                return;
            }
        }
        
        
        //Añadir al combo box lo que se escribe en el texto
        ComboBoxDatos.addItem(TextoIntroducirDatos.getText());
        
        if (ComboBoxCurso.getSelectedItem().equals("Primero")){
                    TextoIntroducirDatos.setText("1º ");
            }
                
        if (ComboBoxCurso.getSelectedItem().equals("Segundo")){
                    TextoIntroducirDatos.setText("2º ");
        }

    }//GEN-LAST:event_BotonIntroducirDatosActionPerformed

    private void BotonIntroducirTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonIntroducirTodoActionPerformed

        //Array de todos los elementos del primer año
        String primero[] = {"Sistemas", "Bases de datos", "Programacion", "lenguaje de marcas",
            "Entornos de desarrollo", "FOL", "Digitalizacion"};

        //Array de todos los elementos del segundo año
        String segundo[] = {"Desarrollo de interfaces", "Acceso a datos", "Programacion de servicios y procesos",
            "Programacion multimedia y android", "Sistemas de gestion empresarial", "Iniciativa emprendedora",
            "Ingles"};
        
        
        if (ComboBoxCurso.getSelectedItem().equals("Primero")) {

            for (int i = 0; i < primero.length; i++) {
                boolean existe = false;
                for (int j = 0; j < ComboBoxDatos.getItemCount(); j++) {
                    if (("1º " + primero[i]).equals(ComboBoxDatos.getItemAt(j))) {
                        existe = true;
                        break;
                    }

                }

                if (existe == false) {
                    ComboBoxDatos.addItem("1º " + primero[i]);
                }

            }
        }

        if (ComboBoxCurso.getSelectedItem().equals("Segundo")) {

            for (int i = 0; i < segundo.length; i++) {
                boolean existe = false;
                for (int j = 0; j < ComboBoxDatos.getItemCount(); j++) {
                    if (("2º " + segundo[i]).equals(ComboBoxDatos.getItemAt(j))) {
                        existe = true;
                        break;
                    }

                }

                if (existe == false) {
                    ComboBoxDatos.addItem("2º " + segundo[i]);
                }

            }
        }


    }//GEN-LAST:event_BotonIntroducirTodoActionPerformed

    private void BotonBorrarTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonBorrarTodoActionPerformed
        //Si en el combobox no hay ningun elemento, salta el error.
        if (ComboBoxDatos.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(rootPane, "No hay ningun elemento que borrar", getTitle(), JOptionPane.ERROR_MESSAGE);
            return;
        }

        //Elimina todos los elementos del comboBox
        ComboBoxDatos.removeAllItems();

    }//GEN-LAST:event_BotonBorrarTodoActionPerformed

    private void BotonBorrarSeleccionadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonBorrarSeleccionadoActionPerformed
        //Si en el combobox no hay ningun elemento, salta el error.
        if (ComboBoxDatos.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(rootPane, "No hay ningun elemento que borrar", getTitle(), JOptionPane.ERROR_MESSAGE);
            return;
        }
        //Si hay un elemento en el combobox, lo elimina.
        ComboBoxDatos.removeItem(ComboBoxDatos.getSelectedItem());

    }//GEN-LAST:event_BotonBorrarSeleccionadoActionPerformed

    private void ComboBoxCursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBoxCursoActionPerformed
        
        if (ComboBoxCurso.getSelectedItem().equals("Primero")){
            
            TextoIntroducirDatos.setText("");
            TextoIntroducirDatos.setText("1º ");
            return;
        }
        
        if (ComboBoxCurso.getSelectedItem().equals("Segundo")){
            
            TextoIntroducirDatos.setText("");
            TextoIntroducirDatos.setText("2º ");
            return;
        }
    }//GEN-LAST:event_ComboBoxCursoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaComboBox.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaComboBox.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaComboBox.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaComboBox.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaComboBox().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonBorrarSeleccionado;
    private javax.swing.JButton BotonBorrarTodo;
    private javax.swing.JButton BotonIntroducirDatos;
    private javax.swing.JButton BotonIntroducirTodo;
    private javax.swing.JComboBox<String> ComboBoxCurso;
    private javax.swing.JComboBox<String> ComboBoxDatos;
    private javax.swing.JTextField TextoIntroducirDatos;
    private javax.swing.JLabel TextoPrincipal;
    // End of variables declaration//GEN-END:variables
}
